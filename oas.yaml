openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: http://localhost:8000
    description: Development server

paths:
  /orders:
    get:
      parameters:
        - name: cancelled
          in: query
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
    post:
      summary: Creates an order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderSchema"
      responses:
        "201":
          description: A JSON representation of the created order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderSchema"

  /orders/{order_id}:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Returns the details of a specific order
      operationId: getOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderSchema"
    put:
      summary: Replaces an existing order
      operationId: updateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderSchema"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderSchema"

    delete:
      summary: Deletes an existing order
      operationId: deleteOrder
      responses:
        "204":
          description: The resource was deleted successfully

  /orders/{order_id}/pay:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Processes payment for an order
      operationId: payOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderSchema"

  /orders/{order_id}/cancel:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Cancels an order
      operationId: cancelOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderSchema"

components:
  schemas:
    OrderItemSchema:
      type: object
      required:
        - "product"
        - "size"
      properties:
        product:
          type: string
        size:
          type: string
          enum:
            - small
            - medium
            - large
        quantity:
          type: integer
          default: 1
          minimum: 1

    CreateOrderSchema:
      type: object
      required:
        - order
      properties:
        order:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/OrderItemSchema"

    GetOrderSchema:
      type: object
      required:
        - id
        - created
        - status
        - order
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - created
            - paid
            - progress
            - cancelled
            - dispatched
            - delivered
        order:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/OrderItemSchema"
